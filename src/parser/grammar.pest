ws      = _{ " " | "\t" | NEWLINE }
COMMENT = _{ "#" }

integer        =  { ASCII_DIGIT+ }
add_op         =  { "+" }
sub_op         =  { "-" }
mul_op         =  { "*" }
div_op         =  { "/" }
operator       = _{ add_op | sub_op | mul_op | div_op }
neg_op         =  { "-" }
pos_op         =  { "+" }
unary_operator = _{ neg_op | pos_op }
terminate      = _{ ";" }

expr    =  { ws* ~ atom ~ ws* ~ (operator ~ ws* ~ atom ~ ws*)* }
primary = _{ integer | identifier | ("(" ~ ws* ~ expr ~ ws* ~ ")") }
atom    = _{ (unary_operator ~ ws*)* ~ primary }

identifier = { !keyword ~ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }

declaration = { "gimme" ~ ws* ~ identifier ~ ws* ~ "=" ~ ws* ~ expr }
assignment  = { identifier ~ ws* ~ "=" ~ ws* ~ expr }

notation = _{ "`" ~ chess_notation ~ "`" }

code = { (( assignment | declaration | expr ) ~ ws* ~ terminate ~ ws*)* }

chess_file = { 'a'..'h' }
chess_rank = { '1'..'8' }

target_cell          = { chess_file ~ chess_rank }
chess_piece          = { ("N" | "B" | "R" | "Q" | "K") }
chess_piece_conflict = { chess_piece ~ ((chess_file ~ chess_rank) | chess_file | chess_rank) }
chess_piece_move     = { (chess_piece_conflict ~ capture? ~ target_cell) | (chess_piece ~ capture? ~ target_cell) }

pawn_move      = { pawn_capture? ~ target_cell ~ promotion? }
promotion      = { chess_piece }
castle         = { "0-0" | "0-0-0" }
check          = { ("+" | "#") }
capture        = { "x" }
pawn_capture   = { chess_file ~ "x" }
chess_notation = { (chess_piece_move | pawn_move | castle) ~ check? }

keyword = _{ "gimme" }
